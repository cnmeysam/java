/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dateconvertor;

import java.awt.ComponentOrientation;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.chrono.HijrahChronology;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;

//miladi
import java.time.chrono.HijrahDate;
import java.time.chrono.HijrahEra;
import java.time.format.DateTimeFormatter;





/**
 *
 * @author Admin
 */
public class DateConvertor extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public DateConvertor() {
        initComponents();
        combodate.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jtxtmiadi = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtxtshamsi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jformatdate = new javax.swing.JFormattedTextField();
        combodate = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtmiladi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("dateconvertor"); // NOI18N
        setResizable(false);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("تبدیل/Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jtxtmiadi.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("B Nazanin", 1, 14)); // NOI18N
        jLabel1.setText("میلادی");

        jLabel2.setFont(new java.awt.Font("B Nazanin", 1, 14)); // NOI18N
        jLabel2.setText("شمسی");

        jtxtshamsi.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("B Nazanin", 1, 14)); // NOI18N
        jLabel3.setText("ثبت تاریخ");

        try {
            jformatdate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####/##/##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jformatdate.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        combodate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        combodate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "شمسی به میلادی/shamsi to gregorian", "میلادی به شمسی/gregorian to shamsi", "میلادی به قمری/gregorian to hijri", "قمری به میلادی/hijri to gregorian", "شمسی به قمری/shamsi to hijri", "قمری به شمسی/hijri to shamsi" }));
        combodate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combodateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("B Nazanin", 1, 14)); // NOI18N
        jLabel4.setText("نوع تبدیل");

        jLabel5.setFont(new java.awt.Font("B Nazanin", 1, 14)); // NOI18N
        jLabel5.setText("قمری");

        txtmiladi.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N
        jLabel6.setText("Conversion type");

        jLabel7.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N
        jLabel7.setText("Date");

        jLabel8.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N
        jLabel8.setText("Gregorian");

        jLabel9.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N
        jLabel9.setText("Shamsi(Iranian Date)");

        jLabel10.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N
        jLabel10.setText("Hijri(Qamari/ Islamic)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtmiladi, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtshamsi, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtmiadi, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jformatdate, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(combodate, 0, 326, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combodate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jformatdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtmiadi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtshamsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmiladi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5))))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(571, 279));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: "yyyy/MM/dd" "yyyy/MM/dd hh:mm:ss"
        
        //شروع گرفتن اعداد از تکست باکس
        
        
        String yearsubstr = "";
        String year = jformatdate.getText();
        String monsubstr = "";
        String mon = jformatdate.getText();
        String daysubstr = "";
        String day = jformatdate.getText();
        
        
        
        yearsubstr = year.substring(0, 4);
        monsubstr = mon.substring(5, 7);
        daysubstr = day.substring(8, 10);
        //شروع گرفتن اعداد از تکست باکس
       

        
        int y=Integer.parseInt(yearsubstr);  
        int m=Integer.parseInt(monsubstr);  
        int d=Integer.parseInt(daysubstr);  

        System.out.println("DATE= "+y+"/"+m+"/"+d);

        
        
        
     // دریافت زمان کنونی سیستم
        Calendar cal = Calendar.getInstance();

        int mYear = cal.get(Calendar.YEAR);
        int mMonth = cal.get(Calendar.MONTH) + 1;
        int mDay = cal.get(Calendar.DAY_OF_MONTH);

        shamsi jCal = new shamsi(); // ایجاد یک نمونه از کلاس تبدیل تاریخ
        jCal.GregorianToPersian(mYear, mMonth, mDay); // دادن تاریخ کنونی سیستم به متد تبدیل تاریخ میلادی به شمسی







        if((String)combodate.getSelectedItem()=="شمسی به میلادی/shamsi to gregorian")
        {
            //تبدیل تاریخ شمسی به میلادی:
        jCal.PersianToGregorian(y,m,d);
        
        jtxtmiadi.setText(jCal.toString());
        }
        
        
        if((String)combodate.getSelectedItem()=="میلادی به شمسی/gregorian to shamsi")
        {
            //تبدیل تاریخ میلادی به شمسی:
        jCal.GregorianToPersian(y,m,d);
        jCal.toString();
       
        jtxtshamsi.setText(jCal.toString());
        }

         if((String)combodate.getSelectedItem()=="میلادی به قمری/gregorian to hijri")
        {
        //تقویم قمری
        
        // March 20th 2018
        LocalDate dt = LocalDate.of(y, m, d);

        // convert to hijrah
        HijrahDate hijrahDate = HijrahDate.from(dt);

        // format to MM/DD/YYYY
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        String formatted = formatter.format(hijrahDate); // 07/03/1439
        System.out.println("DATE= "+formatted);
        txtmiladi.setText(formatted);    

        }
         
         if((String)combodate.getSelectedItem()=="قمری به میلادی/hijri to gregorian")
        {
        //تقویم قمری
        
        HijrahDate hd = HijrahChronology.INSTANCE.date(HijrahEra.AH, y, m, d);
        LocalDate ld = LocalDate.from(hd);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        String formatted = formatter.format(ld); // 07/03/1439
        System.out.println("DATE= "+formatted);
        
        jtxtmiadi.setText(formatted);    

        }
         
         if((String)combodate.getSelectedItem()=="شمسی به قمری/shamsi to hijri")
        {
        //تقویم قمری
            
        jCal.PersianToGregorian(y,m,d);
        
        
        
        
       //میلادی
        String year1 = jCal.toString();
        String mon1 = jCal.toString();
        String day1 = jCal.toString();
        
        yearsubstr = year1.substring(0, 4);
        monsubstr = mon1.substring(5, 7);
        daysubstr = day1.substring(8, 10);
        
        int y1=Integer.parseInt(yearsubstr);  
        int m1=Integer.parseInt(monsubstr);  
        int d1=Integer.parseInt(daysubstr);
        //میلادی
        
        // March 20th 2018
        LocalDate dt = LocalDate.of(y1, m1, d1);

        // convert to hijrah
        HijrahDate hijrahDate = HijrahDate.from(dt);

        // format to MM/DD/YYYY
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        String formatted = formatter.format(hijrahDate); // 07/03/1439
        System.out.println("DATE= "+formatted);
        txtmiladi.setText(formatted);    
        

        }
         
         if((String)combodate.getSelectedItem()=="قمری به شمسی/hijri to shamsi")
        {
        //تقویم قمری
            
        HijrahDate hd = HijrahChronology.INSTANCE.date(HijrahEra.AH, y, m, d);
        LocalDate ld = LocalDate.from(hd);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        String formatted = formatter.format(ld); // 07/03/1439
        
        
        
       //میلادی
        String year1 = formatted;
        String mon1 = formatted;
        String day1 = formatted;
        
        yearsubstr = year1.substring(0, 4);
        monsubstr = mon1.substring(5, 7);
        daysubstr = day1.substring(8, 10);
        
        int y1=Integer.parseInt(yearsubstr);  
        int m1=Integer.parseInt(monsubstr);  
        int d1=Integer.parseInt(daysubstr);
        //میلادی
        jCal.GregorianToPersian(y1,m1,d1);
        jCal.toString();
       
        jtxtshamsi.setText(jCal.toString());
        

        }
         
         
         
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void combodateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combodateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combodateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DateConvertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DateConvertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DateConvertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DateConvertor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DateConvertor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combodate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JFormattedTextField jformatdate;
    private javax.swing.JTextField jtxtmiadi;
    private javax.swing.JTextField jtxtshamsi;
    private javax.swing.JTextField txtmiladi;
    // End of variables declaration//GEN-END:variables
}
